%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &1
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 61de73402e562fb4c9c942d045f87072, type: 3}
  m_Name: 
  m_EditorClassIdentifier: 
  scripts:
  - name: 
    type: 0
    assemblies:
    - UnityEngine.PhysicsModule
    - UnityEngine.TerrainPhysicsModule
    code: "            using System.Collections.Generic;\r\n            for (int
      j = 0; j < 8; ++j)\r\n            {\r\n                for (int k = 0; k <
      8; ++k)\r\n                {\r\n                    int xStart = j * 128;\r\n                   
      int yStart = k * 128;\r\n                    int xx = 128;\r\n                   
      int l = xx + 1;\r\n\r\n\r\n                    int w = 1024, h = 1024;\r\n                   
      List<Vector3> vs = new List<Vector3>();\r\n                    List<Vector3>
      ns = new List<Vector3>();\r\n                    List<int> ins = new List<int>();\r\n\r\n                   
      for (int y = 0; y < l; ++y)\r\n                    {\r\n                       
      for (int x = 0; x < l; ++x)\r\n                        {\r\n                           
      float height = 0;\r\n                            RaycastHit hit = new RaycastHit();\r\n                           
      if (Physics.Raycast(new Ray(new Vector3(x + xStart, 256, y + yStart), Vector3.down),
      out hit, 1000, 1 << 6))\r\n                            {\r\n                               
      height = hit.point.y;\r\n                            }\r\n                           
      else if (Physics.Raycast(new Ray(new Vector3(x + xStart - w, 256, y + yStart),
      Vector3.down), out hit, 1000, 1 << 6))\r\n                            {\r\n                               
      height = hit.point.y;\r\n                            }\r\n                           
      else if (Physics.Raycast(new Ray(new Vector3(x + xStart - w, 256, y + yStart
      - h), Vector3.down), out hit, 1000, 1 << 6))\r\n                           
      {\r\n                                height = hit.point.y;\r\n                           
      }\r\n                            else if (Physics.Raycast(new Ray(new Vector3(x
      + xStart, 256, y + yStart - h), Vector3.down), out hit, 1000, 1 << 6))\r\n                           
      {\r\n                                height = hit.point.y;\r\n                           
      }\r\n                            vs.Add(new Vector3(x, height, y));\r\n                           
      ns.Add(Vector3.up);\r\n                            if (x > 0 && y > 0)\r\n                           
      {\r\n                                ins.Add((y - 1) * l + x - 1);\r\n                               
      ins.Add((y) * l + x);\r\n                                ins.Add((y - 1) *
      l + x);\r\n\r\n                                ins.Add((y) * l + x - 1);\r\n                               
      ins.Add((y) * l + x);\r\n                                ins.Add((y - 1) *
      l + x - 1);\r\n                            }\r\n                        }\r\n                   
      }\r\n\r\n                    Mesh m = new Mesh();\r\n\r\n                   
      m.SetVertices(vs);\r\n                    m.SetNormals(ns);\r\n                   
      m.SetIndices(ins, MeshTopology.Triangles, 0);\r\n\r\n                    var
      go = new GameObject(\"AA\");\r\n                    go.transform.position =
      new Vector3(xStart, 0, yStart);\r\n                    var mf = go.AddComponent<MeshFilter>();\r\n                   
      mf.mesh = m;\r\n                    go.AddComponent<MeshRenderer>();\r\n               
      }\r\n            }"
